AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  DonutsDynamoTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      SSESpecification:
        SSEEnabled: true
  DonutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: donut/
      Handler: donut_lambda.get_handler
      Runtime: python3.8
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DonutsDynamoTable
      Environment:
        Variables:
          DONUTS_TABLE_NAME: !Ref DonutsDynamoTable
      Events:
        donut:
          Type: Api
          Properties:
            RestApiId: !Ref DonutAPI
            Path: /donut_lambda
            Method: GET
  DonutAPIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: DonutAPIPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                - "dynamodb:Scan"
                Resource: "*"
  DonutAPI:
    Type: AWS::Serverless::Api
    Properties:
      EndpointConfiguration: REGIONAL
      StageName: Prod
      Name: DonutAPI
      DefinitionBody:
        openapi: 3.0.2
        paths:
          /donut_lambda:
            get:
              description: get a list of donuts
              responses:
                "200":
                  description: OK
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DonutFunction.Arn}/invocations"
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
          /donut_service_integration:
            get:
              description: get a list of donuts
              responses:
                "200":
                  description: OK
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:dynamodb:action/Scan"
                httpMethod: POST
                credentials: !GetAtt DonutAPIRole.Arn
                type: aws
                requestTemplates:
                  application/json:
                    Fn::Sub:
                      - |-
                        {
                          "TableName": "${tableName}"
                        }
                      - { tableName: { Ref: DonutsDynamoTable } }
                responses:
                  default:
                    statusCode: 200
                    responseTemplates:
                      application/json: '#set($inputRoot = $input.path("$"))
                                    [
                                      #foreach($elem in $inputRoot.Items) {
                                        "id": "$elem.id.S",
                                        "name": "$elem.name.S",
                                      }#if($foreach.hasNext),#end
                                      #end
                                    ]'
